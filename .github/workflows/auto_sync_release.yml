name: Sync Upstream Releases

on:
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 8 * * *' # 每天 UTC 时间早上 8 点运行一次

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0
      
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/fishjar/kiss-translator.git
          git fetch upstream
      
      - name: Merge upstream changes
        run: |
          git checkout main  # 或你的默认分支
          git merge upstream/main --allow-unrelated-histories
      
      - name: Push changes
        run: |
          git push origin main
    
      - name: Get latest release from upstream
        id: get_upstream_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: latest_release } = await github.rest.repos.getLatestRelease({
              owner: 'fishjar',
              repo: 'kiss-translator',
            });
            console.log(`Latest upstream release is ${latest_release.tag_name}`);
            core.setOutput('tag_name', latest_release.tag_name);
            core.setOutput('name', latest_release.name);
            core.setOutput('body', latest_release.body);
            return latest_release.tag_name;

      - name: Check if release already exists in fork
        id: check_fork_release
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const { data: release } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: '${{ steps.get_upstream_release.outputs.tag_name }}',
              });
              console.log('Release already exists in fork.');
              core.setOutput('exists', 'true');
            } catch (error) {
              if (error.status === 404) {
                console.log('Release does not exist in fork. Proceeding to create it.');
                core.setOutput('exists', 'false');
              } else {
                throw error;
              }
            }

      - name: Create release in fork
        if: steps.check_fork_release.outputs.exists == 'false'
        uses: actions/github-script@v6
        env:
          RELEASE_BODY: ${{ steps.get_upstream_release.outputs.body }}
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            console.log('Creating release ${{ steps.get_upstream_release.outputs.tag_name }} in fork.');
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.get_upstream_release.outputs.tag_name }}',
              name: '${{ steps.get_upstream_release.outputs.name }}',
              // Read the body from the environment variable
              body: process.env.RELEASE_BODY,
              prerelease: false,
              draft: false,
            });
